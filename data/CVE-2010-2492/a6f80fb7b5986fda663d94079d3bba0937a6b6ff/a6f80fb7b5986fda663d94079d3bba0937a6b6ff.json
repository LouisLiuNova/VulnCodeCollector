{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "a6f80fb7b5986fda663d94079d3bba0937a6b6ff",
    "commit_massage": "ecryptfs: Bugfix for error related to ecryptfs_hash_buckets\n\nThe function ecryptfs_uid_hash wrongly assumes that the\nsecond parameter to hash_long() is the number of hash\nbuckets instead of the number of hash bits.\nThis patch fixes that and renames the variable\necryptfs_hash_buckets to ecryptfs_hash_bits to make it\nclearer.\n\nFixes: CVE-2010-2492\n\nSigned-off-by: Andre Osterhues <aosterhues@escrypt.com>\nSigned-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/a6f80fb7b5986fda663d94079d3bba0937a6b6ff",
    "html_ref": "https://github.com/torvalds/linux/commit/a6f80fb7b5986fda663d94079d3bba0937a6b6ff",
    "author": "Andre Osterhues",
    "changes_stats": {
        "total": 17,
        "additions": 9,
        "deletions": 8
    },
    "files": [
        {
            "sha": "46c4dd8dfcc3749acc04a03377c6740e280c519c",
            "filename": "fs/ecryptfs/messaging.c",
            "status": "modified",
            "additions": 9,
            "deletions": 8,
            "changes": 17,
            "blob_url": "https://github.com/torvalds/linux/blob/a6f80fb7b5986fda663d94079d3bba0937a6b6ff/fs%2Fecryptfs%2Fmessaging.c",
            "raw_url": "https://github.com/torvalds/linux/raw/a6f80fb7b5986fda663d94079d3bba0937a6b6ff/fs%2Fecryptfs%2Fmessaging.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/fs%2Fecryptfs%2Fmessaging.c?ref=a6f80fb7b5986fda663d94079d3bba0937a6b6ff",
            "patch": "@@ -31,9 +31,9 @@ static struct mutex ecryptfs_msg_ctx_lists_mux;\n \n static struct hlist_head *ecryptfs_daemon_hash;\n struct mutex ecryptfs_daemon_hash_mux;\n-static int ecryptfs_hash_buckets;\n+static int ecryptfs_hash_bits;\n #define ecryptfs_uid_hash(uid) \\\n-        hash_long((unsigned long)uid, ecryptfs_hash_buckets)\n+        hash_long((unsigned long)uid, ecryptfs_hash_bits)\n \n static u32 ecryptfs_msg_counter;\n static struct ecryptfs_msg_ctx *ecryptfs_msg_ctx_arr;\n@@ -486,18 +486,19 @@ int ecryptfs_init_messaging(void)\n \t}\n \tmutex_init(&ecryptfs_daemon_hash_mux);\n \tmutex_lock(&ecryptfs_daemon_hash_mux);\n-\tecryptfs_hash_buckets = 1;\n-\twhile (ecryptfs_number_of_users >> ecryptfs_hash_buckets)\n-\t\tecryptfs_hash_buckets++;\n+\tecryptfs_hash_bits = 1;\n+\twhile (ecryptfs_number_of_users >> ecryptfs_hash_bits)\n+\t\tecryptfs_hash_bits++;\n \tecryptfs_daemon_hash = kmalloc((sizeof(struct hlist_head)\n-\t\t\t\t\t* ecryptfs_hash_buckets), GFP_KERNEL);\n+\t\t\t\t\t* (1 << ecryptfs_hash_bits)),\n+\t\t\t\t       GFP_KERNEL);\n \tif (!ecryptfs_daemon_hash) {\n \t\trc = -ENOMEM;\n \t\tprintk(KERN_ERR \"%s: Failed to allocate memory\\n\", __func__);\n \t\tmutex_unlock(&ecryptfs_daemon_hash_mux);\n \t\tgoto out;\n \t}\n-\tfor (i = 0; i < ecryptfs_hash_buckets; i++)\n+\tfor (i = 0; i < (1 << ecryptfs_hash_bits); i++)\n \t\tINIT_HLIST_HEAD(&ecryptfs_daemon_hash[i]);\n \tmutex_unlock(&ecryptfs_daemon_hash_mux);\n \tecryptfs_msg_ctx_arr = kmalloc((sizeof(struct ecryptfs_msg_ctx)\n@@ -554,7 +555,7 @@ void ecryptfs_release_messaging(void)\n \t\tint i;\n \n \t\tmutex_lock(&ecryptfs_daemon_hash_mux);\n-\t\tfor (i = 0; i < ecryptfs_hash_buckets; i++) {\n+\t\tfor (i = 0; i < (1 << ecryptfs_hash_bits); i++) {\n \t\t\tint rc;\n \n \t\t\thlist_for_each_entry(daemon, elem,"
        }
    ],
    "parent_commit_sha": "6c50e1a49b4377b760ee46f824ed04b17be913e3"
}