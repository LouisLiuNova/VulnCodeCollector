{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "208c72f4fe44fe09577e7975ba0e7fa0278f3d03",
    "commit_massage": "nl80211: fix check for valid SSID size in scan operations\n\nIn both trigger_scan and sched_scan operations, we were checking for\nthe SSID length before assigning the value correctly.  Since the\nmemory was just kzalloc'ed, the check was always failing and SSID with\nover 32 characters were allowed to go through.\n\nThis was causing a buffer overflow when copying the actual SSID to the\nproper place.\n\nThis bug has been there since 2.6.29-rc4.\n\nCc: stable@kernel.org\nSigned-off-by: Luciano Coelho <coelho@ti.com>\nSigned-off-by: John W. Linville <linville@tuxdriver.com>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/208c72f4fe44fe09577e7975ba0e7fa0278f3d03",
    "html_ref": "https://github.com/torvalds/linux/commit/208c72f4fe44fe09577e7975ba0e7fa0278f3d03",
    "author": "Luciano Coelho",
    "changes_stats": {
        "total": 4,
        "additions": 2,
        "deletions": 2
    },
    "files": [
        {
            "sha": "88a565f130a5a2e2e0f72fca3c204505a810a652",
            "filename": "net/wireless/nl80211.c",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/torvalds/linux/blob/208c72f4fe44fe09577e7975ba0e7fa0278f3d03/net%2Fwireless%2Fnl80211.c",
            "raw_url": "https://github.com/torvalds/linux/raw/208c72f4fe44fe09577e7975ba0e7fa0278f3d03/net%2Fwireless%2Fnl80211.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/net%2Fwireless%2Fnl80211.c?ref=208c72f4fe44fe09577e7975ba0e7fa0278f3d03",
            "patch": "@@ -3406,12 +3406,12 @@ static int nl80211_trigger_scan(struct sk_buff *skb, struct genl_info *info)\n \ti = 0;\n \tif (info->attrs[NL80211_ATTR_SCAN_SSIDS]) {\n \t\tnla_for_each_nested(attr, info->attrs[NL80211_ATTR_SCAN_SSIDS], tmp) {\n+\t\t\trequest->ssids[i].ssid_len = nla_len(attr);\n \t\t\tif (request->ssids[i].ssid_len > IEEE80211_MAX_SSID_LEN) {\n \t\t\t\terr = -EINVAL;\n \t\t\t\tgoto out_free;\n \t\t\t}\n \t\t\tmemcpy(request->ssids[i].ssid, nla_data(attr), nla_len(attr));\n-\t\t\trequest->ssids[i].ssid_len = nla_len(attr);\n \t\t\ti++;\n \t\t}\n \t}\n@@ -3572,14 +3572,14 @@ static int nl80211_start_sched_scan(struct sk_buff *skb,\n \tif (info->attrs[NL80211_ATTR_SCAN_SSIDS]) {\n \t\tnla_for_each_nested(attr, info->attrs[NL80211_ATTR_SCAN_SSIDS],\n \t\t\t\t    tmp) {\n+\t\t\trequest->ssids[i].ssid_len = nla_len(attr);\n \t\t\tif (request->ssids[i].ssid_len >\n \t\t\t    IEEE80211_MAX_SSID_LEN) {\n \t\t\t\terr = -EINVAL;\n \t\t\t\tgoto out_free;\n \t\t\t}\n \t\t\tmemcpy(request->ssids[i].ssid, nla_data(attr),\n \t\t\t       nla_len(attr));\n-\t\t\trequest->ssids[i].ssid_len = nla_len(attr);\n \t\t\ti++;\n \t\t}\n \t}"
        }
    ],
    "parent_commit_sha": "21bc7af6e5e684b44725b20f679e701e38ceef15"
}