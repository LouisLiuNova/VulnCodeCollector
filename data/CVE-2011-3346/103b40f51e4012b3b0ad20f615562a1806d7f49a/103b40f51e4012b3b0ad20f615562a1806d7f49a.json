{
    "owner": "bonzini",
    "repo": "qemu",
    "commit_sha": "103b40f51e4012b3b0ad20f615562a1806d7f49a",
    "commit_massage": "scsi-disk: commonize iovec creation between reads and writes\n\nAlso, consistently use qiov.size instead of iov.iov_len.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Kevin Wolf <kwolf@redhat.com>",
    "raw_ref": "https://api.github.com/repos/bonzini/qemu/commits/103b40f51e4012b3b0ad20f615562a1806d7f49a",
    "html_ref": "https://github.com/bonzini/qemu/commit/103b40f51e4012b3b0ad20f615562a1806d7f49a",
    "author": "bonzini",
    "changes_stats": {
        "total": 42,
        "additions": 18,
        "deletions": 24
    },
    "files": [
        {
            "sha": "84e866278096557efcedceb5ad337ddc3e1eee13",
            "filename": "hw/scsi-disk.c",
            "status": "modified",
            "additions": 18,
            "deletions": 24,
            "changes": 42,
            "blob_url": "https://github.com/bonzini/qemu/blob/103b40f51e4012b3b0ad20f615562a1806d7f49a/hw%2Fscsi-disk.c",
            "raw_url": "https://github.com/bonzini/qemu/raw/103b40f51e4012b3b0ad20f615562a1806d7f49a/hw%2Fscsi-disk.c",
            "contents_url": "https://api.github.com/repos/bonzini/qemu/contents/hw%2Fscsi-disk.c?ref=103b40f51e4012b3b0ad20f615562a1806d7f49a",
            "patch": "@@ -108,6 +108,13 @@ static void scsi_cancel_io(SCSIRequest *req)\n     r->req.aiocb = NULL;\n }\n \n+static uint32_t scsi_init_iovec(SCSIDiskReq *r)\n+{\n+    r->iov.iov_len = MIN(r->sector_count * 512, SCSI_DMA_BUF_SIZE);\n+    qemu_iovec_init_external(&r->qiov, &r->iov, 1);\n+    return r->qiov.size / 512;\n+}\n+\n static void scsi_read_complete(void * opaque, int ret)\n {\n     SCSIDiskReq *r = (SCSIDiskReq *)opaque;\n@@ -125,12 +132,12 @@ static void scsi_read_complete(void * opaque, int ret)\n         }\n     }\n \n-    DPRINTF(\"Data ready tag=0x%x len=%zd\\n\", r->req.tag, r->iov.iov_len);\n+    DPRINTF(\"Data ready tag=0x%x len=%zd\\n\", r->req.tag, r->qiov.size);\n \n-    n = r->iov.iov_len / 512;\n+    n = r->qiov.size / 512;\n     r->sector += n;\n     r->sector_count -= n;\n-    scsi_req_data(&r->req, r->iov.iov_len);\n+    scsi_req_data(&r->req, r->qiov.size);\n }\n \n static void scsi_flush_complete(void * opaque, int ret)\n@@ -181,16 +188,10 @@ static void scsi_read_data(SCSIRequest *req)\n         return;\n     }\n \n-    n = r->sector_count;\n-    if (n > SCSI_DMA_BUF_SIZE / 512)\n-        n = SCSI_DMA_BUF_SIZE / 512;\n-\n     if (s->tray_open) {\n         scsi_read_complete(r, -ENOMEDIUM);\n     }\n-    r->iov.iov_len = n * 512;\n-    qemu_iovec_init_external(&r->qiov, &r->iov, 1);\n-\n+    n = scsi_init_iovec(r);\n     bdrv_acct_start(s->bs, &r->acct, n * BDRV_SECTOR_SIZE, BDRV_ACCT_READ);\n     r->req.aiocb = bdrv_aio_readv(s->bs, r->sector, &r->qiov, n,\n                               scsi_read_complete, r);\n@@ -239,7 +240,6 @@ static void scsi_write_complete(void * opaque, int ret)\n {\n     SCSIDiskReq *r = (SCSIDiskReq *)opaque;\n     SCSIDiskState *s = DO_UPCAST(SCSIDiskState, qdev, r->req.dev);\n-    uint32_t len;\n     uint32_t n;\n \n     if (r->req.aiocb != NULL) {\n@@ -253,19 +253,15 @@ static void scsi_write_complete(void * opaque, int ret)\n         }\n     }\n \n-    n = r->iov.iov_len / 512;\n+    n = r->qiov.size / 512;\n     r->sector += n;\n     r->sector_count -= n;\n     if (r->sector_count == 0) {\n         scsi_req_complete(&r->req, GOOD);\n     } else {\n-        len = r->sector_count * 512;\n-        if (len > SCSI_DMA_BUF_SIZE) {\n-            len = SCSI_DMA_BUF_SIZE;\n-        }\n-        r->iov.iov_len = len;\n-        DPRINTF(\"Write complete tag=0x%x more=%d\\n\", r->req.tag, len);\n-        scsi_req_data(&r->req, len);\n+        scsi_init_iovec(r);\n+        DPRINTF(\"Write complete tag=0x%x more=%d\\n\", r->req.tag, r->qiov.size);\n+        scsi_req_data(&r->req, r->qiov.size);\n     }\n }\n \n@@ -284,21 +280,19 @@ static void scsi_write_data(SCSIRequest *req)\n         return;\n     }\n \n-    n = r->iov.iov_len / 512;\n+    n = r->qiov.size / 512;\n     if (n) {\n         if (s->tray_open) {\n             scsi_write_complete(r, -ENOMEDIUM);\n         }\n-        qemu_iovec_init_external(&r->qiov, &r->iov, 1);\n-\n         bdrv_acct_start(s->bs, &r->acct, n * BDRV_SECTOR_SIZE, BDRV_ACCT_WRITE);\n         r->req.aiocb = bdrv_aio_writev(s->bs, r->sector, &r->qiov, n,\n-                                   scsi_write_complete, r);\n+                                       scsi_write_complete, r);\n         if (r->req.aiocb == NULL) {\n             scsi_write_complete(r, -ENOMEM);\n         }\n     } else {\n-        /* Invoke completion routine to fetch data from host.  */\n+        /* Called for the first time.  Ask the driver to send us more data.  */\n         scsi_write_complete(r, 0);\n     }\n }"
        }
    ],
    "parent_commit_sha": "c3adb5b9168a57790b5074489b6f0275ac3cc8b5"
}