{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "a08d3b3b99efd509133946056531cdf8f3a0c09b",
    "commit_massage": "kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n\nThe problem occurs when the guest performs a pusha with the stack\naddress pointing to an mmio address (or an invalid guest physical\naddress) to start with, but then extending into an ordinary guest\nphysical address.  When doing repeated emulated pushes\nemulator_read_write sets mmio_needed to 1 on the first one.  On a\nlater push when the stack points to regular memory,\nmmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to\ncomplete_emulated_mmio.  In complete_emulated_mmio\nvcpu->mmio_cur_fragment is incremented.  The termination condition of\nvcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved.\nThe code bounces back and fourth to userspace incrementing\nmmio_cur_fragment past it's buffer.  If the guest does nothing else it\neventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another\nvcpu with excellent timing, then kvm_clear_async_pf_completion_queue\ncan be used by the guest to control the data that's pointed to by the\ncall to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad\nSigned-off-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org (3.5+)\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/a08d3b3b99efd509133946056531cdf8f3a0c09b",
    "html_ref": "https://github.com/torvalds/linux/commit/a08d3b3b99efd509133946056531cdf8f3a0c09b",
    "author": "Andrew Honig",
    "changes_stats": {
        "total": 2,
        "additions": 1,
        "deletions": 1
    },
    "files": [
        {
            "sha": "2b8578432d5bccd296fa6d5859e3575c0fe4aa02",
            "filename": "arch/x86/kvm/x86.c",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/torvalds/linux/blob/a08d3b3b99efd509133946056531cdf8f3a0c09b/arch%2Fx86%2Fkvm%2Fx86.c",
            "raw_url": "https://github.com/torvalds/linux/raw/a08d3b3b99efd509133946056531cdf8f3a0c09b/arch%2Fx86%2Fkvm%2Fx86.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/arch%2Fx86%2Fkvm%2Fx86.c?ref=a08d3b3b99efd509133946056531cdf8f3a0c09b",
            "patch": "@@ -6186,7 +6186,7 @@ static int complete_emulated_mmio(struct kvm_vcpu *vcpu)\n \t\tfrag->len -= len;\n \t}\n \n-\tif (vcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments) {\n+\tif (vcpu->mmio_cur_fragment >= vcpu->mmio_nr_fragments) {\n \t\tvcpu->mmio_needed = 0;\n \n \t\t/* FIXME: return into emulator if single-stepping.  */"
        }
    ],
    "parent_commit_sha": "b20c9f29c5c25921c6ad18b50d4b61e6d181c3cc"
}