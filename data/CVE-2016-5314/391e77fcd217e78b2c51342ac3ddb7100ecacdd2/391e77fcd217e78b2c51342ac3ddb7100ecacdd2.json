{"owner": "vadz", "repo": "libtiff", "commit_sha": "391e77fcd217e78b2c51342ac3ddb7100ecacdd2", "commit_massage": "* libtiff/tif_pixarlog.c: fix potential buffer write overrun in\nPixarLogDecode() on corrupted/unexpected images (reported by Mathias Svensson)", "raw_ref": "https://api.github.com/repos/vadz/libtiff/commits/391e77fcd217e78b2c51342ac3ddb7100ecacdd2", "html_ref": "https://github.com/vadz/libtiff/commit/391e77fcd217e78b2c51342ac3ddb7100ecacdd2", "author": "erouault", "changes_stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "dee18813f02fbed7b4dbaf179621a32e297fb264", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/vadz/libtiff/blob/391e77fcd217e78b2c51342ac3ddb7100ecacdd2/ChangeLog", "raw_url": "https://github.com/vadz/libtiff/raw/391e77fcd217e78b2c51342ac3ddb7100ecacdd2/ChangeLog", "contents_url": "https://api.github.com/repos/vadz/libtiff/contents/ChangeLog?ref=391e77fcd217e78b2c51342ac3ddb7100ecacdd2", "patch": "@@ -1,3 +1,8 @@\n+2016-06-28  Even Rouault <even.rouault at spatialys.com>\n+\n+\t* libtiff/tif_pixarlog.c: fix potential buffer write overrun in\n+\tPixarLogDecode() on corrupted/unexpected images (reported by Mathias Svensson)\n+\n 2016-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n \n \t* libtiff/libtiff.def: Added _TIFFMultiply32 and _TIFFMultiply64"}, {"sha": "cc486c5472ba4247d7b241aa9a51f4e36dffd97c", "filename": "libtiff/tif_pixarlog.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/vadz/libtiff/blob/391e77fcd217e78b2c51342ac3ddb7100ecacdd2/libtiff%2Ftif_pixarlog.c", "raw_url": "https://github.com/vadz/libtiff/raw/391e77fcd217e78b2c51342ac3ddb7100ecacdd2/libtiff%2Ftif_pixarlog.c", "contents_url": "https://api.github.com/repos/vadz/libtiff/contents/libtiff%2Ftif_pixarlog.c?ref=391e77fcd217e78b2c51342ac3ddb7100ecacdd2", "patch": "@@ -459,6 +459,7 @@ horizontalAccumulate8abgr(uint16 *wp, int n, int stride, unsigned char *op,\n typedef\tstruct {\n \tTIFFPredictorState\tpredict;\n \tz_stream\t\tstream;\n+\ttmsize_t\t\ttbuf_size; /* only set/used on reading for now */\n \tuint16\t\t\t*tbuf; \n \tuint16\t\t\tstride;\n \tint\t\t\tstate;\n@@ -694,6 +695,7 @@ PixarLogSetupDecode(TIFF* tif)\n \tsp->tbuf = (uint16 *) _TIFFmalloc(tbuf_size);\n \tif (sp->tbuf == NULL)\n \t\treturn (0);\n+\tsp->tbuf_size = tbuf_size;\n \tif (sp->user_datafmt == PIXARLOGDATAFMT_UNKNOWN)\n \t\tsp->user_datafmt = PixarLogGuessDataFmt(td);\n \tif (sp->user_datafmt == PIXARLOGDATAFMT_UNKNOWN) {\n@@ -783,6 +785,12 @@ PixarLogDecode(TIFF* tif, uint8* op, tmsize_t occ, uint16 s)\n \t\tTIFFErrorExt(tif->tif_clientdata, module, \"ZLib cannot deal with buffers this size\");\n \t\treturn (0);\n \t}\n+\t/* Check that we will not fill more than what was allocated */\n+\tif (sp->stream.avail_out > sp->tbuf_size)\n+\t{\n+\t\tTIFFErrorExt(tif->tif_clientdata, module, \"sp->stream.avail_out > sp->tbuf_size\");\n+\t\treturn (0);\n+\t}\n \tdo {\n \t\tint state = inflate(&sp->stream, Z_PARTIAL_FLUSH);\n \t\tif (state == Z_STREAM_END) {"}], "parent_commit_sha": "c421b993abe1d6792252833c3bc8b3252b015fb9"}