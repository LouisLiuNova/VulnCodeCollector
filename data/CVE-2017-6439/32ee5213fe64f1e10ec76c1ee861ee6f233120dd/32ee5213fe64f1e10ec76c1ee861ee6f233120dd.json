{
    "owner": "libimobiledevice",
    "repo": "libplist",
    "commit_sha": "32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
    "commit_massage": "bplist: Fix data range check for string/data/dict/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result\nin a memcpy with a size of -1, leading to undefined behavior.\nThis commit makes sure that the actual node data (which depends on the size)\nis in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz",
    "raw_ref": "https://api.github.com/repos/libimobiledevice/libplist/commits/32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
    "html_ref": "https://github.com/libimobiledevice/libplist/commit/32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
    "author": "nikias",
    "changes_stats": {
        "total": 12,
        "additions": 6,
        "deletions": 6
    },
    "files": [
        {
            "sha": "7d21b273b865d734155a4e96e88e67a2145d4760",
            "filename": "src/bplist.c",
            "status": "modified",
            "additions": 6,
            "deletions": 6,
            "changes": 12,
            "blob_url": "https://github.com/libimobiledevice/libplist/blob/32ee5213fe64f1e10ec76c1ee861ee6f233120dd/src%2Fbplist.c",
            "raw_url": "https://github.com/libimobiledevice/libplist/raw/32ee5213fe64f1e10ec76c1ee861ee6f233120dd/src%2Fbplist.c",
            "contents_url": "https://api.github.com/repos/libimobiledevice/libplist/contents/src%2Fbplist.c?ref=32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
            "patch": "@@ -654,14 +654,14 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n         return parse_date_node(object, size);\n \n     case BPLIST_DATA:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_DATA data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_data_node(object, size);\n \n     case BPLIST_STRING:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_STRING data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n@@ -672,15 +672,15 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n             PLIST_BIN_ERR(\"%s: Integer overflow when calculating BPLIST_UNICODE data size.\\n\", __func__);\n             return NULL;\n         }\n-        if (*object + size*2 > bplist->offset_table) {\n+        if (*object + size*2 < *object || *object + size*2 > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_UNICODE data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_unicode_node(object, size);\n \n     case BPLIST_SET:\n     case BPLIST_ARRAY:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_ARRAY data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n@@ -694,8 +694,8 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n         return parse_uid_node(object, size);\n \n     case BPLIST_DICT:\n-        if (*object + size > bplist->offset_table) {\n-            PLIST_BIN_ERR(\"%s: BPLIST_REAL data bytes point outside of valid range\\n\", __func__);\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n+            PLIST_BIN_ERR(\"%s: BPLIST_DICT data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_dict_node(bplist, object, size);"
        }
    ],
    "parent_commit_sha": "72f7cf803635a127c63bcd37ab35ced28636410a"
}