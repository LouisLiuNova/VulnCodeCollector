{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "f7068114d45ec55996b9040e98111afa56e010fe",
    "commit_massage": "sr: pass down correctly sized SCSI sense buffer\n\nWe're casting the CDROM layer request_sense to the SCSI sense\nbuffer, but the former is 64 bytes and the latter is 96 bytes.\nAs we generally allocate these on the stack, we end up blowing\nup the stack.\n\nFix this by wrapping the scsi_execute() call with a properly\nsized sense buffer, and copying back the bits for the CDROM\nlayer.\n\nCc: stable@vger.kernel.org\nReported-by: Piotr Gabriel Kosinski <pg.kosinski@gmail.com>\nReported-by: Daniel Shapira <daniel@twistlock.com>\nTested-by: Kees Cook <keescook@chromium.org>\nFixes: 82ed4db499b8 (\"block: split scsi_request out of struct request\")\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/f7068114d45ec55996b9040e98111afa56e010fe",
    "html_ref": "https://github.com/torvalds/linux/commit/f7068114d45ec55996b9040e98111afa56e010fe",
    "author": "axboe",
    "changes_stats": {
        "total": 10,
        "additions": 8,
        "deletions": 2
    },
    "files": [
        {
            "sha": "35fab1e18adc3414935b182fe1774c911d733291",
            "filename": "drivers/scsi/sr_ioctl.c",
            "status": "modified",
            "additions": 8,
            "deletions": 2,
            "changes": 10,
            "blob_url": "https://github.com/torvalds/linux/blob/f7068114d45ec55996b9040e98111afa56e010fe/drivers%2Fscsi%2Fsr_ioctl.c",
            "raw_url": "https://github.com/torvalds/linux/raw/f7068114d45ec55996b9040e98111afa56e010fe/drivers%2Fscsi%2Fsr_ioctl.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/drivers%2Fscsi%2Fsr_ioctl.c?ref=f7068114d45ec55996b9040e98111afa56e010fe",
            "patch": "@@ -188,20 +188,26 @@ int sr_do_ioctl(Scsi_CD *cd, struct packet_command *cgc)\n \tstruct scsi_device *SDev;\n \tstruct scsi_sense_hdr sshdr;\n \tint result, err = 0, retries = 0;\n+\tunsigned char sense_buffer[SCSI_SENSE_BUFFERSIZE], *senseptr = NULL;\n \n \tSDev = cd->device;\n \n+\tif (cgc->sense)\n+\t\tsenseptr = sense_buffer;\n+\n       retry:\n \tif (!scsi_block_when_processing_errors(SDev)) {\n \t\terr = -ENODEV;\n \t\tgoto out;\n \t}\n \n \tresult = scsi_execute(SDev, cgc->cmd, cgc->data_direction,\n-\t\t\t      cgc->buffer, cgc->buflen,\n-\t\t\t      (unsigned char *)cgc->sense, &sshdr,\n+\t\t\t      cgc->buffer, cgc->buflen, senseptr, &sshdr,\n \t\t\t      cgc->timeout, IOCTL_RETRIES, 0, 0, NULL);\n \n+\tif (cgc->sense)\n+\t\tmemcpy(cgc->sense, sense_buffer, sizeof(*cgc->sense));\n+\n \t/* Minimal error checking.  Ignore cases we know about, and report the rest. */\n \tif (driver_byte(result) != 0) {\n \t\tswitch (sshdr.sense_key) {"
        }
    ],
    "parent_commit_sha": "1c1a2ee1b53b006754073eefc65d2b2cedb5264b"
}