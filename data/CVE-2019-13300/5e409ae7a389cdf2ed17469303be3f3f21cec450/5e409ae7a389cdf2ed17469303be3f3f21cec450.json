{
    "owner": "ImageMagick",
    "repo": "ImageMagick6",
    "commit_sha": "5e409ae7a389cdf2ed17469303be3f3f21cec450",
    "commit_massage": "https://github.com/ImageMagick/ImageMagick/issues/1586",
    "raw_ref": "https://api.github.com/repos/ImageMagick/ImageMagick6/commits/5e409ae7a389cdf2ed17469303be3f3f21cec450",
    "html_ref": "https://github.com/ImageMagick/ImageMagick6/commit/5e409ae7a389cdf2ed17469303be3f3f21cec450",
    "author": "Cristy",
    "changes_stats": {
        "total": 15,
        "additions": 11,
        "deletions": 4
    },
    "files": [
        {
            "sha": "7a07c5282548c4db45ba4a0fad2af728af506155",
            "filename": "magick/statistic.c",
            "status": "modified",
            "additions": 11,
            "deletions": 4,
            "changes": 15,
            "blob_url": "https://github.com/ImageMagick/ImageMagick6/blob/5e409ae7a389cdf2ed17469303be3f3f21cec450/magick%2Fstatistic.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick6/raw/5e409ae7a389cdf2ed17469303be3f3f21cec450/magick%2Fstatistic.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick6/contents/magick%2Fstatistic.c?ref=5e409ae7a389cdf2ed17469303be3f3f21cec450",
            "patch": "@@ -149,8 +149,11 @@ static MagickPixelPacket **DestroyPixelThreadSet(MagickPixelPacket **pixels)\n   return(pixels);\n }\n \n-static MagickPixelPacket **AcquirePixelThreadSet(const Image *image)\n+static MagickPixelPacket **AcquirePixelThreadSet(const Image *images)\n {\n+  const Image\n+    *next;\n+\n   MagickPixelPacket\n     **pixels;\n \n@@ -159,6 +162,7 @@ static MagickPixelPacket **AcquirePixelThreadSet(const Image *image)\n     j;\n \n   size_t\n+    columns,\n     number_threads;\n \n   number_threads=(size_t) GetMagickResourceLimit(ThreadResource);\n@@ -167,14 +171,17 @@ static MagickPixelPacket **AcquirePixelThreadSet(const Image *image)\n   if (pixels == (MagickPixelPacket **) NULL)\n     return((MagickPixelPacket **) NULL);\n   (void) memset(pixels,0,number_threads*sizeof(*pixels));\n+  columns=images->columns;\n+  for (next=images; next != (Image *) NULL; next=next->next)\n+    columns=MagickMax(next->columns,columns);\n   for (i=0; i < (ssize_t) number_threads; i++)\n   {\n-    pixels[i]=(MagickPixelPacket *) AcquireQuantumMemory(image->columns,\n+    pixels[i]=(MagickPixelPacket *) AcquireQuantumMemory(columns,\n       sizeof(**pixels));\n     if (pixels[i] == (MagickPixelPacket *) NULL)\n       return(DestroyPixelThreadSet(pixels));\n-    for (j=0; j < (ssize_t) image->columns; j++)\n-      GetMagickPixelPacket(image,&pixels[i][j]);\n+    for (j=0; j < (ssize_t) columns; j++)\n+      GetMagickPixelPacket(images,&pixels[i][j]);\n   }\n   return(pixels);\n }"
        }
    ],
    "parent_commit_sha": "a3a5cc1202627b8f4f47c36985fed6f50dbf3def"
}