{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4",
    "commit_massage": "x86/microcode/intel: Guard against stack overflow in the loader\n\nmc_saved_tmp is a static array allocated on the stack, we need to make\nsure mc_saved_count stays within its bounds, otherwise we're overflowing\nthe stack in _save_mc(). A specially crafted microcode header could lead\nto a kernel crash or potentially kernel execution.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: Fenghua Yu <fenghua.yu@intel.com>\nLink: http://lkml.kernel.org/r/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com\nSigned-off-by: Borislav Petkov <bp@suse.de>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4",
    "html_ref": "https://github.com/torvalds/linux/commit/f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4",
    "author": "Quentin Casasnovas",
    "changes_stats": {
        "total": 2,
        "additions": 1,
        "deletions": 1
    },
    "files": [
        {
            "sha": "5e109a31f62bb0168f704bd04d725b8ff580df6e",
            "filename": "arch/x86/kernel/cpu/microcode/intel_early.c",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/torvalds/linux/blob/f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4/arch%2Fx86%2Fkernel%2Fcpu%2Fmicrocode%2Fintel_early.c",
            "raw_url": "https://github.com/torvalds/linux/raw/f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4/arch%2Fx86%2Fkernel%2Fcpu%2Fmicrocode%2Fintel_early.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/arch%2Fx86%2Fkernel%2Fcpu%2Fmicrocode%2Fintel_early.c?ref=f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4",
            "patch": "@@ -321,7 +321,7 @@ get_matching_model_microcode(int cpu, unsigned long start,\n \tunsigned int mc_saved_count = mc_saved_data->mc_saved_count;\n \tint i;\n \n-\twhile (leftover) {\n+\twhile (leftover && mc_saved_count < ARRAY_SIZE(mc_saved_tmp)) {\n \t\tmc_header = (struct microcode_header_intel *)ucode_ptr;\n \n \t\tmc_size = get_totalsize(mc_header);"
        }
    ],
    "parent_commit_sha": "e36f014edff70fc02b3d3d79cead1d58f289332e"
}