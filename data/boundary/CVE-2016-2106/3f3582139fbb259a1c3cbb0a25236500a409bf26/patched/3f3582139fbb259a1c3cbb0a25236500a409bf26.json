{
    "owner": "openssl",
    "repo": "openssl",
    "commit_sha": "3f3582139fbb259a1c3cbb0a25236500a409bf26",
    "commit_massage": "Fix encrypt overflow\n\nAn overflow can occur in the EVP_EncryptUpdate function. If an attacker is\nable to supply very large amounts of input data after a previous call to\nEVP_EncryptUpdate with a partial block then a length check can overflow\nresulting in a heap corruption.\n\nFollowing an analysis of all OpenSSL internal usage of the\nEVP_EncryptUpdate function all usage is one of two forms.\n\nThe first form is like this:\nEVP_EncryptInit()\nEVP_EncryptUpdate()\n\ni.e. where the EVP_EncryptUpdate() call is known to be the first called\nfunction after an EVP_EncryptInit(), and therefore that specific call\nmust be safe.\n\nThe second form is where the length passed to EVP_EncryptUpdate() can be\nseen from the code to be some small value and therefore there is no\npossibility of an overflow.\n\nSince all instances are one of these two forms, I believe that there can\nbe no overflows in internal code due to this problem.\n\nIt should be noted that EVP_DecryptUpdate() can call EVP_EncryptUpdate()\nin certain code paths. Also EVP_CipherUpdate() is a synonym for\nEVP_EncryptUpdate(). Therefore I have checked all instances of these\ncalls too, and came to the same conclusion, i.e. there are no instances\nin internal usage where an overflow could occur.\n\nThis could still represent a security issue for end user code that calls\nthis function directly.\n\nCVE-2016-2106\n\nIssue reported by Guido Vranken.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>",
    "raw_ref": "https://api.github.com/repos/openssl/openssl/commits/3f3582139fbb259a1c3cbb0a25236500a409bf26",
    "html_ref": "https://github.com/openssl/openssl/commit/3f3582139fbb259a1c3cbb0a25236500a409bf26",
    "author": "mattcaswell",
    "changes_stats": {
        "total": 2,
        "additions": 1,
        "deletions": 1
    },
    "files": [
        {
            "sha": "e02e801949c0eb883ad8def26f63875ec6dda2ed",
            "filename": "crypto/evp/evp_enc.c",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/openssl/openssl/blob/3f3582139fbb259a1c3cbb0a25236500a409bf26/crypto%2Fevp%2Fevp_enc.c",
            "raw_url": "https://github.com/openssl/openssl/raw/3f3582139fbb259a1c3cbb0a25236500a409bf26/crypto%2Fevp%2Fevp_enc.c",
            "contents_url": "https://api.github.com/repos/openssl/openssl/contents/crypto%2Fevp%2Fevp_enc.c?ref=3f3582139fbb259a1c3cbb0a25236500a409bf26",
            "patch": "@@ -332,7 +332,7 @@ int EVP_EncryptUpdate(EVP_CIPHER_CTX *ctx, unsigned char *out, int *outl,\n     bl = ctx->cipher->block_size;\n     OPENSSL_assert(bl <= (int)sizeof(ctx->buf));\n     if (i != 0) {\n-        if (i + inl < bl) {\n+        if (bl - i > inl) {\n             memcpy(&(ctx->buf[i]), in, inl);\n             ctx->buf_len += inl;\n             *outl = 0;"
        }
    ],
    "parent_commit_sha": "05aef4bbdbc18e7b9490512cdee41e8a608bcc0e"
}