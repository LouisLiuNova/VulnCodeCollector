{
    "owner": "RedisBloom",
    "repo": "RedisBloom",
    "commit_sha": "2f3b38394515fc6c9b130679bcd2435a796a49ad",
    "commit_massage": "MOD-6344 Fix potential crash for cf.scandump and cf.loadchunk (#726)\n\nAdd boundary checks for cf.scandump and cf.loadchunk\r\n\r\nCo-authored-by: Ozan Tezcan <ozantezcan@gmail.com>",
    "raw_ref": "https://api.github.com/repos/RedisBloom/RedisBloom/commits/2f3b38394515fc6c9b130679bcd2435a796a49ad",
    "html_ref": "https://github.com/RedisBloom/RedisBloom/commit/2f3b38394515fc6c9b130679bcd2435a796a49ad",
    "author": "YaacovHazan",
    "changes_stats": {
        "total": 20,
        "additions": 18,
        "deletions": 2
    },
    "files": [
        {
            "sha": "79f757ad1f57a3527a350f62aefcf96d64d43c3f",
            "filename": "src/cf.c",
            "status": "modified",
            "additions": 7,
            "deletions": 1,
            "changes": 8,
            "blob_url": "https://github.com/RedisBloom/RedisBloom/blob/2f3b38394515fc6c9b130679bcd2435a796a49ad/src%2Fcf.c",
            "raw_url": "https://github.com/RedisBloom/RedisBloom/raw/2f3b38394515fc6c9b130679bcd2435a796a49ad/src%2Fcf.c",
            "contents_url": "https://api.github.com/repos/RedisBloom/RedisBloom/contents/src%2Fcf.c?ref=2f3b38394515fc6c9b130679bcd2435a796a49ad",
            "patch": "@@ -84,7 +84,7 @@ const char *CF_GetEncodedChunk(const CuckooFilter *cf, long long *pos, size_t *b\n }\n \n int CF_LoadEncodedChunk(const CuckooFilter *cf, long long pos, const char *data, size_t datalen) {\n-    if (datalen == 0) {\n+    if (datalen == 0 || pos <= 0 || (size_t)(pos - 1) < datalen) {\n         return REDISMODULE_ERR;\n     }\n \n@@ -102,6 +102,12 @@ int CF_LoadEncodedChunk(const CuckooFilter *cf, long long pos, const char *data,\n         offset -= currentSize;\n     }\n \n+    // Boundary check before memcpy()\n+    if (!filter || ((size_t)offset > SIZE_MAX - datalen) ||\n+        filter->bucketSize * filter->numBuckets < offset + datalen) {\n+        return REDISMODULE_ERR;\n+    }\n+\n     // copy data to filter\n     memcpy(filter->data + offset, data, datalen);\n     return REDISMODULE_OK;"
        },
        {
            "sha": "b3a781706cd82c5d1b9a40fcde6d511bae114c8b",
            "filename": "src/rebloom.c",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/RedisBloom/RedisBloom/blob/2f3b38394515fc6c9b130679bcd2435a796a49ad/src%2Frebloom.c",
            "raw_url": "https://github.com/RedisBloom/RedisBloom/raw/2f3b38394515fc6c9b130679bcd2435a796a49ad/src%2Frebloom.c",
            "contents_url": "https://api.github.com/repos/RedisBloom/RedisBloom/contents/src%2Frebloom.c?ref=2f3b38394515fc6c9b130679bcd2435a796a49ad",
            "patch": "@@ -850,7 +850,7 @@ static int CFScanDump_RedisCommand(RedisModuleCtx *ctx, RedisModuleString **argv\n     }\n \n     long long pos;\n-    if (RedisModule_StringToLongLong(argv[2], &pos) != REDISMODULE_OK) {\n+    if (RedisModule_StringToLongLong(argv[2], &pos) != REDISMODULE_OK || pos < 0) {\n         return RedisModule_ReplyWithError(ctx, \"Invalid position\");\n     }\n "
        },
        {
            "sha": "3001d447a1df90d7e312ef96cf50fdad87eab0c5",
            "filename": "tests/flow/test_cuckoo.py",
            "status": "modified",
            "additions": 10,
            "deletions": 0,
            "changes": 10,
            "blob_url": "https://github.com/RedisBloom/RedisBloom/blob/2f3b38394515fc6c9b130679bcd2435a796a49ad/tests%2Fflow%2Ftest_cuckoo.py",
            "raw_url": "https://github.com/RedisBloom/RedisBloom/raw/2f3b38394515fc6c9b130679bcd2435a796a49ad/tests%2Fflow%2Ftest_cuckoo.py",
            "contents_url": "https://api.github.com/repos/RedisBloom/RedisBloom/contents/tests%2Fflow%2Ftest_cuckoo.py?ref=2f3b38394515fc6c9b130679bcd2435a796a49ad",
            "patch": "@@ -454,3 +454,13 @@ def test_scandump_huge(self):\n         # check loaded filter\n         for x in range(6):\n             self.assertEqual(1, self.cmd('cf.exists', 'cf', 'foo'))\n+\n+    def test_scandump_invalid(self):\n+        self.cmd('FLUSHALL')\n+        self.cmd('cf.reserve', 'cf', 4)\n+        self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '-9223372036854775808', '1')\n+        self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '922337203685477588', '1')\n+        self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '4', 'kdoasdksaodsadsadsadsadsadadsadadsdad')\n+        self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '4', 'abcd')\n+        self.cmd('cf.add', 'cf', 'x')\n+        self.assertRaises(ResponseError, self.cmd, 'cf.scandump', 'cf', '-1')"
        }
    ],
    "parent_commit_sha": "18264b470ed61a9ae9d41043624a0d4dda981235"
}