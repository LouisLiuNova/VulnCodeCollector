{
    "owner": "ImageMagick",
    "repo": "ImageMagick",
    "commit_sha": "5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
    "commit_massage": "outside the range of representable values of type 'unsigned char' (#3083)\n\nCo-authored-by: Zhang Xiaohui <ruc_zhangxiaohui@163.com>",
    "raw_ref": "https://api.github.com/repos/ImageMagick/ImageMagick/commits/5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
    "html_ref": "https://github.com/ImageMagick/ImageMagick/commit/5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
    "author": "hifoolno",
    "changes_stats": {
        "total": 26,
        "additions": 13,
        "deletions": 13
    },
    "files": [
        {
            "sha": "4f08939e0d18ecfce6cde24e7d02d54a54313373",
            "filename": "MagickCore/quantum-export.c",
            "status": "modified",
            "additions": 13,
            "deletions": 13,
            "changes": 26,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/5af1dffa4b6ab984b5f13d1e91c95760d75f12a6/MagickCore%2Fquantum-export.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/5af1dffa4b6ab984b5f13d1e91c95760d75f12a6/MagickCore%2Fquantum-export.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickCore%2Fquantum-export.c?ref=5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
            "patch": "@@ -2530,28 +2530,28 @@ static void ExportIndexQuantum(const Image *image,QuantumInfo *quantum_info,\n \n       for (x=((ssize_t) number_pixels-7); x > 0; x-=8)\n       {\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q=((pixel & 0x01) << 7);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 6);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 5);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 4);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 3);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 2);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 1);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0x01) << 0);\n         p+=GetPixelChannels(image);\n         q++;\n@@ -2561,7 +2561,7 @@ static void ExportIndexQuantum(const Image *image,QuantumInfo *quantum_info,\n           *q='\\0';\n           for (bit=7; bit >= (ssize_t) (8-(number_pixels % 8)); bit--)\n           {\n-            pixel=(unsigned char) GetPixelIndex(image,p);\n+            pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n             *q|=((pixel & 0x01) << (unsigned char) bit);\n             p+=GetPixelChannels(image);\n           }\n@@ -2576,17 +2576,17 @@ static void ExportIndexQuantum(const Image *image,QuantumInfo *quantum_info,\n \n       for (x=0; x < (ssize_t) (number_pixels-1) ; x+=2)\n       {\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q=((pixel & 0xf) << 4);\n         p+=GetPixelChannels(image);\n-        pixel=(unsigned char) GetPixelIndex(image,p);\n+        pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n         *q|=((pixel & 0xf) << 0);\n         p+=GetPixelChannels(image);\n         q++;\n       }\n       if ((number_pixels % 2) != 0)\n         {\n-          pixel=(unsigned char) GetPixelIndex(image,p);\n+          pixel=(unsigned char) ((ssize_t) GetPixelIndex(image,p));\n           *q=((pixel & 0xf) << 4);\n           p+=GetPixelChannels(image);\n           q++;\n@@ -2597,7 +2597,7 @@ static void ExportIndexQuantum(const Image *image,QuantumInfo *quantum_info,\n     {\n       for (x=0; x < (ssize_t) number_pixels; x++)\n       {\n-        q=PopCharPixel((unsigned char) GetPixelIndex(image,p),q);\n+        q=PopCharPixel((unsigned char) ((ssize_t) GetPixelIndex(image,p)),q);\n         p+=GetPixelChannels(image);\n         q+=quantum_info->pad;\n       }"
        }
    ],
    "parent_commit_sha": "fbd9a963db1ae5551c45dc8af57db0abd7695774"
}