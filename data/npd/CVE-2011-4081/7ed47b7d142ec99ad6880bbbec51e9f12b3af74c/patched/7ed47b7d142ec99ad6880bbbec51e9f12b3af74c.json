{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
    "commit_massage": "crypto: ghash - Avoid null pointer dereference if no key is set\n\nThe ghash_update function passes a pointer to gf128mul_4k_lle which will\nbe NULL if ghash_setkey is not called or if the most recent call to\nghash_setkey failed to allocate memory.  This causes an oops.  Fix this\nup by returning an error code in the null case.\n\nThis is trivially triggered from unprivileged userspace through the\nAF_ALG interface by simply writing to the socket without setting a key.\n\nThe ghash_final function has a similar issue, but triggering it requires\na memory allocation failure in ghash_setkey _after_ at least one\nsuccessful call to ghash_update.\n\n  BUG: unable to handle kernel NULL pointer dereference at 00000670\n  IP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul]\n  *pde = 00000000\n  Oops: 0000 [#1] PREEMPT SMP\n  Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc\n\n  Pid: 1502, comm: hashatron Tainted: G        W   3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs\n  EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0\n  EIP is at gf128mul_4k_lle+0x23/0x60 [gf128mul]\n  EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000\n  ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4\n   DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068\n  Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000)\n  Stack:\n   00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000\n   00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc\n   00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000\n  Call Trace:\n   [<c101a520>] ? kmap_atomic_prot+0x37/0xa6\n   [<d88d310f>] ghash_update+0x85/0xbe [ghash_generic]\n   [<c11676ed>] crypto_shash_update+0x18/0x1b\n   [<c11679ad>] shash_ahash_update+0x22/0x36\n   [<c11679cc>] shash_async_update+0xb/0xd\n   [<d88ce0ba>] hash_sendpage+0xba/0xf2 [algif_hash]\n   [<c121b24c>] kernel_sendpage+0x39/0x4e\n   [<d88ce000>] ? 0xd88cdfff\n   [<c121b298>] sock_sendpage+0x37/0x3e\n   [<c121b261>] ? kernel_sendpage+0x4e/0x4e\n   [<c10b4dbc>] pipe_to_sendpage+0x56/0x61\n   [<c10b4e1f>] splice_from_pipe_feed+0x58/0xcd\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10\n   [<c10b51f5>] __splice_from_pipe+0x36/0x55\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10\n   [<c10b6383>] splice_from_pipe+0x51/0x64\n   [<c10b63c2>] ? default_file_splice_write+0x2c/0x2c\n   [<c10b63d5>] generic_splice_sendpage+0x13/0x15\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10\n   [<c10b527f>] do_splice_from+0x5d/0x67\n   [<c10b6865>] sys_splice+0x2bf/0x363\n   [<c129373b>] ? sysenter_exit+0xf/0x16\n   [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e/0x13f\n   [<c129370c>] sysenter_do_call+0x12/0x32\n  Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f\n  EIP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] SS:ESP 0068:d6b8dda4\n  CR2: 0000000000000670\n  ---[ end trace 4eaa2a86a8e2da24 ]---\n  note: hashatron[1502] exited with preempt_count 1\n  BUG: scheduling while atomic: hashatron/1502/0x10000002\n  INFO: lockdep is turned off.\n  [...]\n\nSigned-off-by: Nick Bowler <nbowler@elliptictech.com>\nCc: stable@kernel.org [2.6.37+]\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
    "html_ref": "https://github.com/torvalds/linux/commit/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
    "author": "Nick Bowler",
    "changes_stats": {
        "total": 6,
        "additions": 6,
        "deletions": 0
    },
    "files": [
        {
            "sha": "7835b8fc94db6d69b9e93c1806d677e8ea390736",
            "filename": "crypto/ghash-generic.c",
            "status": "modified",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https://github.com/torvalds/linux/blob/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c/crypto%2Fghash-generic.c",
            "raw_url": "https://github.com/torvalds/linux/raw/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c/crypto%2Fghash-generic.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/crypto%2Fghash-generic.c?ref=7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
            "patch": "@@ -67,6 +67,9 @@ static int ghash_update(struct shash_desc *desc,\n \tstruct ghash_ctx *ctx = crypto_shash_ctx(desc->tfm);\n \tu8 *dst = dctx->buffer;\n \n+\tif (!ctx->gf128)\n+\t\treturn -ENOKEY;\n+\n \tif (dctx->bytes) {\n \t\tint n = min(srclen, dctx->bytes);\n \t\tu8 *pos = dst + (GHASH_BLOCK_SIZE - dctx->bytes);\n@@ -119,6 +122,9 @@ static int ghash_final(struct shash_desc *desc, u8 *dst)\n \tstruct ghash_ctx *ctx = crypto_shash_ctx(desc->tfm);\n \tu8 *buf = dctx->buffer;\n \n+\tif (!ctx->gf128)\n+\t\treturn -ENOKEY;\n+\n \tghash_flush(ctx, dctx);\n \tmemcpy(dst, buf, GHASH_BLOCK_SIZE);\n "
        }
    ],
    "parent_commit_sha": "d93dc5c4478c1fd5de85a3e8aece9aad7bbae044"
}