{
    "owner": "torvalds",
    "repo": "linux",
    "commit_sha": "7572777eef78ebdee1ecb7c258c0ef94d35bad16",
    "commit_massage": "fuse: verify ioctl retries\n\nVerify that the total length of the iovec returned in FUSE_IOCTL_RETRY\ndoesn't overflow iov_length().\n\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz>\nCC: Tejun Heo <tj@kernel.org>\nCC: <stable@kernel.org>         [2.6.31+]",
    "raw_ref": "https://api.github.com/repos/torvalds/linux/commits/7572777eef78ebdee1ecb7c258c0ef94d35bad16",
    "html_ref": "https://github.com/torvalds/linux/commit/7572777eef78ebdee1ecb7c258c0ef94d35bad16",
    "author": "Miklos Szeredi",
    "changes_stats": {
        "total": 22,
        "additions": 22,
        "deletions": 0
    },
    "files": [
        {
            "sha": "8b984a2cebbda185af01a6d4d5f8c31c89fc6fbe",
            "filename": "fs/fuse/file.c",
            "status": "modified",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/torvalds/linux/blob/7572777eef78ebdee1ecb7c258c0ef94d35bad16/fs%2Ffuse%2Ffile.c",
            "raw_url": "https://github.com/torvalds/linux/raw/7572777eef78ebdee1ecb7c258c0ef94d35bad16/fs%2Ffuse%2Ffile.c",
            "contents_url": "https://api.github.com/repos/torvalds/linux/contents/fs%2Ffuse%2Ffile.c?ref=7572777eef78ebdee1ecb7c258c0ef94d35bad16",
            "patch": "@@ -1666,6 +1666,20 @@ static int fuse_copy_ioctl_iovec(struct iovec *dst, void *src,\n \treturn 0;\n }\n \n+/* Make sure iov_length() won't overflow */\n+static int fuse_verify_ioctl_iov(struct iovec *iov, size_t count)\n+{\n+\tsize_t n;\n+\tu32 max = FUSE_MAX_PAGES_PER_REQ << PAGE_SHIFT;\n+\n+\tfor (n = 0; n < count; n++) {\n+\t\tif (iov->iov_len > (size_t) max)\n+\t\t\treturn -ENOMEM;\n+\t\tmax -= iov->iov_len;\n+\t}\n+\treturn 0;\n+}\n+\n /*\n  * For ioctls, there is no generic way to determine how much memory\n  * needs to be read and/or written.  Furthermore, ioctls are allowed\n@@ -1858,6 +1872,14 @@ long fuse_do_ioctl(struct file *file, unsigned int cmd, unsigned long arg,\n \t\tin_iov = page_address(iov_page);\n \t\tout_iov = in_iov + in_iovs;\n \n+\t\terr = fuse_verify_ioctl_iov(in_iov, in_iovs);\n+\t\tif (err)\n+\t\t\tgoto out;\n+\n+\t\terr = fuse_verify_ioctl_iov(out_iov, out_iovs);\n+\t\tif (err)\n+\t\t\tgoto out;\n+\n \t\tgoto retry;\n \t}\n "
        }
    ],
    "parent_commit_sha": "d9d318d39dd5cb686660504a3565aac453709ccc"
}