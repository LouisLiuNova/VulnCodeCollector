{
    "owner": "qemu",
    "repo": "qemu",
    "commit_sha": "afbcc40bee4ef51731102d7d4b499ee12fc182e1",
    "commit_massage": "parallels: Fix catalog size integer overflow (CVE-2014-0143)\n\nThe first test case would cause a huge memory allocation, leading to a\nqemu abort; the second one to a too small malloc() for the catalog\n(smaller than s->catalog_size), which causes a read-only out-of-bounds\narray access and on big endian hosts an endianess conversion for an\nundefined memory area.\n\nThe sample image used here is not an original Parallels image. It was\ncreated using an hexeditor on the basis of the struct that qemu uses.\nGood enough for trying to crash the driver, but not for ensuring\ncompatibility.\n\nSigned-off-by: Kevin Wolf <kwolf@redhat.com>\nReviewed-by: Max Reitz <mreitz@redhat.com>\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>",
    "raw_ref": "https://api.github.com/repos/qemu/qemu/commits/afbcc40bee4ef51731102d7d4b499ee12fc182e1",
    "html_ref": "https://github.com/qemu/qemu/commit/afbcc40bee4ef51731102d7d4b499ee12fc182e1",
    "author": "kevmw",
    "changes_stats": {
        "total": 98,
        "additions": 97,
        "deletions": 1
    },
    "files": [
        {
            "sha": "fe47ecb27761107a46b76abcac6ebb422353634e",
            "filename": "block/parallels.c",
            "status": "modified",
            "additions": 6,
            "deletions": 1,
            "changes": 7,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/block%2Fparallels.c",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/block%2Fparallels.c",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/block%2Fparallels.c?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1",
            "patch": "@@ -49,7 +49,7 @@ typedef struct BDRVParallelsState {\n     CoMutex lock;\n \n     uint32_t *catalog_bitmap;\n-    int catalog_size;\n+    unsigned int catalog_size;\n \n     int tracks;\n } BDRVParallelsState;\n@@ -95,6 +95,11 @@ static int parallels_open(BlockDriverState *bs, QDict *options, int flags,\n     s->tracks = le32_to_cpu(ph.tracks);\n \n     s->catalog_size = le32_to_cpu(ph.catalog_entries);\n+    if (s->catalog_size > INT_MAX / 4) {\n+        error_setg(errp, \"Catalog too large\");\n+        ret = -EFBIG;\n+        goto fail;\n+    }\n     s->catalog_bitmap = g_malloc(s->catalog_size * 4);\n \n     ret = bdrv_pread(bs->file, 64, s->catalog_bitmap, s->catalog_size * 4);"
        },
        {
            "sha": "6028ac5db0f66ed5a2abd1b688f3b2d2480afbf0",
            "filename": "tests/qemu-iotests/076",
            "status": "added",
            "additions": 69,
            "deletions": 0,
            "changes": 69,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2F076",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2F076",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/tests%2Fqemu-iotests%2F076?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1",
            "patch": "@@ -0,0 +1,69 @@\n+#!/bin/bash\n+#\n+# parallels format input validation tests\n+#\n+# Copyright (C) 2013 Red Hat, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+\n+# creator\n+owner=kwolf@redhat.com\n+\n+seq=`basename $0`\n+echo \"QA output created by $seq\"\n+\n+here=`pwd`\n+tmp=/tmp/$$\n+status=1\t# failure is the default!\n+\n+_cleanup()\n+{\n+\t_cleanup_test_img\n+}\n+trap \"_cleanup; exit \\$status\" 0 1 2 3 15\n+\n+# get standard environment, filters and checks\n+. ./common.rc\n+. ./common.filter\n+\n+_supported_fmt parallels\n+_supported_proto generic\n+_supported_os Linux\n+\n+catalog_entries_offset=$((0x20))\n+nb_sectors_offset=$((0x24))\n+\n+echo\n+echo \"== Read from a valid (enough) image ==\"\n+_use_sample_img fake.parallels.bz2\n+{ $QEMU_IO -c \"read -P 0x11 0 64k\" $TEST_IMG; } 2>&1 | _filter_qemu_io | _filter_testdir\n+\n+echo\n+echo \"== Negative catalog size ==\"\n+_use_sample_img fake.parallels.bz2\n+poke_file \"$TEST_IMG\" \"$catalog_entries_offset\" \"\\xff\\xff\\xff\\xff\"\n+{ $QEMU_IO -c \"read 0 512\" $TEST_IMG; } 2>&1 | _filter_qemu_io | _filter_testdir\n+\n+echo\n+echo \"== Overflow in catalog allocation ==\"\n+_use_sample_img fake.parallels.bz2\n+poke_file \"$TEST_IMG\" \"$nb_sectors_offset\" \"\\xff\\xff\\xff\\xff\"\n+poke_file \"$TEST_IMG\" \"$catalog_entries_offset\" \"\\x01\\x00\\x00\\x40\"\n+{ $QEMU_IO -c \"read 64M 64M\" $TEST_IMG; } 2>&1 | _filter_qemu_io | _filter_testdir\n+\n+# success, all done\n+echo \"*** done\"\n+rm -f $seq.full\n+status=0"
        },
        {
            "sha": "12af42ac1cbe70c6f65a49dc93c3246d3d53d80a",
            "filename": "tests/qemu-iotests/076.out",
            "status": "added",
            "additions": 14,
            "deletions": 0,
            "changes": 14,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2F076.out",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2F076.out",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/tests%2Fqemu-iotests%2F076.out?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1",
            "patch": "@@ -0,0 +1,14 @@\n+QA output created by 076\n+\n+== Read from a valid (enough) image ==\n+read 65536/65536 bytes at offset 0\n+64 KiB, X ops; XX:XX:XX.X (XXX YYY/sec and XXX ops/sec)\n+\n+== Negative catalog size ==\n+qemu-io: can't open device TEST_DIR/fake.parallels: Catalog too large\n+no file open, try 'help open'\n+\n+== Overflow in catalog allocation ==\n+qemu-io: can't open device TEST_DIR/fake.parallels: Catalog too large\n+no file open, try 'help open'\n+*** done"
        },
        {
            "sha": "0aaf84d015dbfb5a6753761bbfb820dca63b10d4",
            "filename": "tests/qemu-iotests/common",
            "status": "modified",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fcommon",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fcommon",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/tests%2Fqemu-iotests%2Fcommon?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1",
            "patch": "@@ -139,6 +139,7 @@ check options\n     -bochs              test bochs\n     -cow                test cow\n     -cloop              test cloop\n+    -parallels          test parallels\n     -qcow               test qcow\n     -qcow2              test qcow2\n     -qed                test qed\n@@ -192,6 +193,12 @@ testlist options\n             xpand=false\n             ;;\n \n+        -parallels)\n+            IMGFMT=parallels\n+            IMGFMT_GENERIC=false\n+            xpand=false\n+            ;;\n+\n         -qcow)\n             IMGFMT=qcow\n             xpand=false"
        },
        {
            "sha": "864643d256f8a20008920a18213e80e3f3c0bef8",
            "filename": "tests/qemu-iotests/group",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fgroup",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fgroup",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/tests%2Fqemu-iotests%2Fgroup?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1",
            "patch": "@@ -82,6 +82,7 @@\n 073 rw auto quick\n 074 rw auto quick\n 075 rw auto\n+076 auto\n 077 rw auto quick\n 078 rw auto\n 079 rw auto"
        },
        {
            "sha": "ffb5f13bac31bc9ab6e1ea5c0cfa26786f2c4cc6",
            "filename": "tests/qemu-iotests/sample_images/fake.parallels.bz2",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/qemu/qemu/blob/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fsample_images%2Ffake.parallels.bz2",
            "raw_url": "https://github.com/qemu/qemu/raw/afbcc40bee4ef51731102d7d4b499ee12fc182e1/tests%2Fqemu-iotests%2Fsample_images%2Ffake.parallels.bz2",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/tests%2Fqemu-iotests%2Fsample_images%2Ffake.parallels.bz2?ref=afbcc40bee4ef51731102d7d4b499ee12fc182e1"
        }
    ],
    "parent_commit_sha": "5dae6e30c531feb31eed99f9039b52bf70832ce3"
}