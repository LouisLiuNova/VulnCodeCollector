{
    "owner": "openssl",
    "repo": "openssl",
    "commit_sha": "4a23b12a031860253b58d503f296377ca076427b",
    "commit_massage": "Fix SRP buffer overrun vulnerability.\n\nInvalid parameters passed to the SRP code can be overrun an internal\nbuffer. Add sanity check that g, A, B < N to SRP code.\n\nThanks to Sean Devlin and Watson Ladd of Cryptography Services, NCC\nGroup for reporting this issue.",
    "raw_ref": "https://api.github.com/repos/openssl/openssl/commits/4a23b12a031860253b58d503f296377ca076427b",
    "html_ref": "https://github.com/openssl/openssl/commit/4a23b12a031860253b58d503f296377ca076427b",
    "author": "snhenson",
    "changes_stats": {
        "total": 6,
        "additions": 6,
        "deletions": 0
    },
    "files": [
        {
            "sha": "d2c237e96078e67ebfa21ddddda5bbaf3a5120a4",
            "filename": "crypto/srp/srp_lib.c",
            "status": "modified",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https://github.com/openssl/openssl/blob/4a23b12a031860253b58d503f296377ca076427b/crypto%2Fsrp%2Fsrp_lib.c",
            "raw_url": "https://github.com/openssl/openssl/raw/4a23b12a031860253b58d503f296377ca076427b/crypto%2Fsrp%2Fsrp_lib.c",
            "contents_url": "https://api.github.com/repos/openssl/openssl/contents/crypto%2Fsrp%2Fsrp_lib.c?ref=4a23b12a031860253b58d503f296377ca076427b",
            "patch": "@@ -89,6 +89,9 @@ static BIGNUM *srp_Calc_k(BIGNUM *N, BIGNUM *g)\n \tint longg ;\n \tint longN = BN_num_bytes(N);\n \n+\tif (BN_ucmp(g, N) >= 0)\n+\t\treturn NULL;\n+\n \tif ((tmp = OPENSSL_malloc(longN)) == NULL)\n \t\treturn NULL;\n \tBN_bn2bin(N,tmp) ;\n@@ -121,6 +124,9 @@ BIGNUM *SRP_Calc_u(BIGNUM *A, BIGNUM *B, BIGNUM *N)\n \tif ((A == NULL) ||(B == NULL) || (N == NULL))\n \t\treturn NULL;\n \n+\tif (BN_ucmp(A, N) >= 0 || BN_ucmp(B, N) >= 0)\n+\t\treturn NULL;\n+\n \tlongN= BN_num_bytes(N);\n \n \tif ((cAB = OPENSSL_malloc(2*longN)) == NULL) "
        }
    ],
    "parent_commit_sha": "80bd7b41b30af6ee96f519e629463583318de3b0"
}