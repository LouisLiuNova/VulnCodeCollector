{
    "owner": "qemu",
    "repo": "qemu",
    "commit_sha": "d3532a0db02296e687711b8cdc7791924efccea0",
    "commit_massage": "cirrus: fix blit region check\n\nIssues:\n * Doesn't check pitches correctly in case it is negative.\n * Doesn't check width at all.\n\nTurn macro into functions while being at it, also factor out the check\nfor one region which we then can simply call twice for src + dst.\n\nThis is CVE-2014-8106.\n\nReported-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>",
    "raw_ref": "https://api.github.com/repos/qemu/qemu/commits/d3532a0db02296e687711b8cdc7791924efccea0",
    "html_ref": "https://github.com/qemu/qemu/commit/d3532a0db02296e687711b8cdc7791924efccea0",
    "author": "kraxel",
    "changes_stats": {
        "total": 61,
        "additions": 44,
        "deletions": 17
    },
    "files": [
        {
            "sha": "d54fb064615447e9b49755013340646a44c891c1",
            "filename": "hw/display/cirrus_vga.c",
            "status": "modified",
            "additions": 44,
            "deletions": 17,
            "changes": 61,
            "blob_url": "https://github.com/qemu/qemu/blob/d3532a0db02296e687711b8cdc7791924efccea0/hw%2Fdisplay%2Fcirrus_vga.c",
            "raw_url": "https://github.com/qemu/qemu/raw/d3532a0db02296e687711b8cdc7791924efccea0/hw%2Fdisplay%2Fcirrus_vga.c",
            "contents_url": "https://api.github.com/repos/qemu/qemu/contents/hw%2Fdisplay%2Fcirrus_vga.c?ref=d3532a0db02296e687711b8cdc7791924efccea0",
            "patch": "@@ -173,20 +173,6 @@\n \n #define CIRRUS_PNPMMIO_SIZE         0x1000\n \n-#define BLTUNSAFE(s) \\\n-    ( \\\n-        ( /* check dst is within bounds */ \\\n-            (s)->cirrus_blt_height * ABS((s)->cirrus_blt_dstpitch) \\\n-                + ((s)->cirrus_blt_dstaddr & (s)->cirrus_addr_mask) > \\\n-                    (s)->vga.vram_size \\\n-        ) || \\\n-        ( /* check src is within bounds */ \\\n-            (s)->cirrus_blt_height * ABS((s)->cirrus_blt_srcpitch) \\\n-                + ((s)->cirrus_blt_srcaddr & (s)->cirrus_addr_mask) > \\\n-                    (s)->vga.vram_size \\\n-        ) \\\n-    )\n-\n struct CirrusVGAState;\n typedef void (*cirrus_bitblt_rop_t) (struct CirrusVGAState *s,\n                                      uint8_t * dst, const uint8_t * src,\n@@ -279,6 +265,46 @@ static void cirrus_update_memory_access(CirrusVGAState *s);\n  *\n  ***************************************/\n \n+static bool blit_region_is_unsafe(struct CirrusVGAState *s,\n+                                  int32_t pitch, int32_t addr)\n+{\n+    if (pitch < 0) {\n+        int64_t min = addr\n+            + ((int64_t)s->cirrus_blt_height-1) * pitch;\n+        int32_t max = addr\n+            + s->cirrus_blt_width;\n+        if (min < 0 || max >= s->vga.vram_size) {\n+            return true;\n+        }\n+    } else {\n+        int64_t max = addr\n+            + ((int64_t)s->cirrus_blt_height-1) * pitch\n+            + s->cirrus_blt_width;\n+        if (max >= s->vga.vram_size) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+static bool blit_is_unsafe(struct CirrusVGAState *s)\n+{\n+    /* should be the case, see cirrus_bitblt_start */\n+    assert(s->cirrus_blt_width > 0);\n+    assert(s->cirrus_blt_height > 0);\n+\n+    if (blit_region_is_unsafe(s, s->cirrus_blt_dstpitch,\n+                              s->cirrus_blt_dstaddr & s->cirrus_addr_mask)) {\n+        return true;\n+    }\n+    if (blit_region_is_unsafe(s, s->cirrus_blt_srcpitch,\n+                              s->cirrus_blt_srcaddr & s->cirrus_addr_mask)) {\n+        return true;\n+    }\n+\n+    return false;\n+}\n+\n static void cirrus_bitblt_rop_nop(CirrusVGAState *s,\n                                   uint8_t *dst,const uint8_t *src,\n                                   int dstpitch,int srcpitch,\n@@ -636,7 +662,7 @@ static int cirrus_bitblt_common_patterncopy(CirrusVGAState * s,\n \n     dst = s->vga.vram_ptr + (s->cirrus_blt_dstaddr & s->cirrus_addr_mask);\n \n-    if (BLTUNSAFE(s))\n+    if (blit_is_unsafe(s))\n         return 0;\n \n     (*s->cirrus_rop) (s, dst, src,\n@@ -654,8 +680,9 @@ static int cirrus_bitblt_solidfill(CirrusVGAState *s, int blt_rop)\n {\n     cirrus_fill_t rop_func;\n \n-    if (BLTUNSAFE(s))\n+    if (blit_is_unsafe(s)) {\n         return 0;\n+    }\n     rop_func = cirrus_fill[rop_to_index[blt_rop]][s->cirrus_blt_pixelwidth - 1];\n     rop_func(s, s->vga.vram_ptr + (s->cirrus_blt_dstaddr & s->cirrus_addr_mask),\n              s->cirrus_blt_dstpitch,\n@@ -752,7 +779,7 @@ static void cirrus_do_copy(CirrusVGAState *s, int dst, int src, int w, int h)\n \n static int cirrus_bitblt_videotovideo_copy(CirrusVGAState * s)\n {\n-    if (BLTUNSAFE(s))\n+    if (blit_is_unsafe(s))\n         return 0;\n \n     cirrus_do_copy(s, s->cirrus_blt_dstaddr - s->vga.start_addr,"
        }
    ],
    "parent_commit_sha": "db12451decf7dfe0f083564183e135f2095228b9"
}