{
    "owner": "freetype",
    "repo": "freetype",
    "commit_sha": "b3500af717010137046ec4076d1e1c0641e33727",
    "commit_massage": "Change some fields in `FT_Bitmap' to unsigned type.\n\nThis doesn't break ABI.\n\n* include/ftimage.h (FT_Bitmap): Make `rows', `width', `num_grays',\n`pixel_mode', and `palette_mode' unsigned types.\n\n* src/base/ftbitmap.c: Updated.\n(FT_Bitmap_Copy): Fix casts.\n\n* src/cache/ftcsbits.c, src/raster/ftraster.c, src/sfnt/pngshim.c:\nUpdated.",
    "raw_ref": "https://api.github.com/repos/freetype/freetype/commits/b3500af717010137046ec4076d1e1c0641e33727",
    "html_ref": "https://github.com/freetype/freetype/commit/b3500af717010137046ec4076d1e1c0641e33727",
    "author": "lemzwerg",
    "changes_stats": {
        "total": 80,
        "additions": 48,
        "deletions": 32
    },
    "files": [
        {
            "sha": "375f75971af387951310394d71f5adbf22d39377",
            "filename": "ChangeLog",
            "status": "modified",
            "additions": 15,
            "deletions": 0,
            "changes": 15,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/ChangeLog",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/ChangeLog",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/ChangeLog?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -1,3 +1,18 @@\n+2014-11-19  Werner Lemberg  <wl@gnu.org>\n+\n+\tChange some fields in `FT_Bitmap' to unsigned type.\n+\n+\tThis doesn't break ABI.\n+\n+\t* include/ftimage.h (FT_Bitmap): Make `rows', `width', `num_grays',\n+\t`pixel_mode', and `palette_mode' unsigned types.\n+\n+\t* src/base/ftbitmap.c: Updated.\n+\t(FT_Bitmap_Copy): Fix casts.\n+\n+\t* src/cache/ftcsbits.c, src/raster/ftraster.c, src/sfnt/pngshim.c:\n+\tUpdated.\n+\n 2014-11-19  Werner Lemberg  <wl@gnu.org>\n \n \tMake `FT_Bitmap_Convert' correctly handle negative `pitch' values."
        },
        {
            "sha": "b66f0361d74a55d6742a252007a108f865b90655",
            "filename": "include/ftimage.h",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/include%2Fftimage.h",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/include%2Fftimage.h",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/include%2Fftimage.h?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -318,13 +318,13 @@ FT_BEGIN_HEADER\n   /*                                                                       */\n   typedef struct  FT_Bitmap_\n   {\n-    int             rows;\n-    int             width;\n+    unsigned int    rows;\n+    unsigned int    width;\n     int             pitch;\n     unsigned char*  buffer;\n-    short           num_grays;\n-    char            pixel_mode;\n-    char            palette_mode;\n+    unsigned short  num_grays;\n+    unsigned char   pixel_mode;\n+    unsigned char   palette_mode;\n     void*           palette;\n \n   } FT_Bitmap;"
        },
        {
            "sha": "3e98079cb4a3cf365ba04639c1b957331bf79f95",
            "filename": "src/base/ftbitmap.c",
            "status": "modified",
            "additions": 13,
            "deletions": 12,
            "changes": 25,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/src%2Fbase%2Fftbitmap.c",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/src%2Fbase%2Fftbitmap.c",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/src%2Fbase%2Fftbitmap.c?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -62,7 +62,7 @@\n \n     if ( pitch < 0 )\n       pitch = -pitch;\n-    size = (FT_ULong)( pitch * source->rows );\n+    size = (FT_ULong)pitch * source->rows;\n \n     if ( target->buffer )\n     {\n@@ -72,7 +72,7 @@\n \n       if ( target_pitch < 0  )\n         target_pitch = -target_pitch;\n-      target_size = (FT_ULong)( target_pitch * target->rows );\n+      target_size = (FT_ULong)target_pitch * target->rows;\n \n       if ( target_size != size )\n         (void)FT_QREALLOC( target->buffer, target_size, size );\n@@ -109,7 +109,7 @@\n     int             pitch;\n     int             new_pitch;\n     FT_UInt         bpp;\n-    FT_Int          i, width, height;\n+    FT_UInt         i, width, height;\n     unsigned char*  buffer = NULL;\n \n \n@@ -147,17 +147,17 @@\n     if ( ypixels == 0 && new_pitch <= pitch )\n     {\n       /* zero the padding */\n-      FT_Int  bit_width = pitch * 8;\n-      FT_Int  bit_last  = ( width + xpixels ) * bpp;\n+      FT_UInt  bit_width = pitch * 8;\n+      FT_UInt  bit_last  = ( width + xpixels ) * bpp;\n \n \n       if ( bit_last < bit_width )\n       {\n         FT_Byte*  line  = bitmap->buffer + ( bit_last >> 3 );\n         FT_Byte*  end   = bitmap->buffer + pitch;\n-        FT_Int    shift = bit_last & 7;\n+        FT_UInt   shift = bit_last & 7;\n         FT_UInt   mask  = 0xFF00U >> shift;\n-        FT_Int    count = height;\n+        FT_UInt   count = height;\n \n \n         for ( ; count > 0; count--, line += pitch, end += pitch )\n@@ -186,7 +186,7 @@\n     /* thus take care of the flow direction         */\n     if ( bitmap->pitch > 0 )\n     {\n-      FT_Int  len = ( width * bpp + 7 ) >> 3;\n+      FT_UInt  len = ( width * bpp + 7 ) >> 3;\n \n \n       for ( i = 0; i < bitmap->rows; i++ )\n@@ -195,7 +195,7 @@\n     }\n     else\n     {\n-      FT_Int  len = ( width * bpp + 7 ) >> 3;\n+      FT_UInt  len = ( width * bpp + 7 ) >> 3;\n \n \n       for ( i = 0; i < bitmap->rows; i++ )\n@@ -226,7 +226,8 @@\n   {\n     FT_Error        error;\n     unsigned char*  p;\n-    FT_Int          i, x, y, pitch;\n+    FT_Int          i, x, pitch;\n+    FT_UInt         y;\n     FT_Int          xstr, ystr;\n \n \n@@ -451,8 +452,8 @@\n     case FT_PIXEL_MODE_LCD_V:\n     case FT_PIXEL_MODE_BGRA:\n       {\n-        FT_Int   pad, old_target_pitch;\n-        FT_Long  old_size;\n+        FT_Int    pad, old_target_pitch;\n+        FT_ULong  old_size;\n \n \n         old_target_pitch = target->pitch;"
        },
        {
            "sha": "59727d16e26885893a140c460260fb1509e018ff",
            "filename": "src/cache/ftcsbits.c",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/src%2Fcache%2Fftcsbits.c",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/src%2Fcache%2Fftcsbits.c",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/src%2Fcache%2Fftcsbits.c?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -4,7 +4,7 @@\n /*                                                                         */\n /*    FreeType sbits manager (body).                                       */\n /*                                                                         */\n-/*  Copyright 2000-2006, 2009-2011, 2013 by                                */\n+/*  Copyright 2000-2006, 2009-2011, 2013, 2014 by                          */\n /*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */\n /*                                                                         */\n /*  This file is part of the FreeType project, and may only be used,       */\n@@ -142,12 +142,12 @@\n         goto BadGlyph;\n       }\n \n-      /* Check that our values fit into 8-bit containers!       */\n+      /* Check whether our values fit into 8-bit containers!    */\n       /* If this is not the case, our bitmap is too large       */\n       /* and we will leave it as `missing' with sbit.buffer = 0 */\n \n-#define CHECK_CHAR( d )  ( temp = (FT_Char)d, temp == d )\n-#define CHECK_BYTE( d )  ( temp = (FT_Byte)d, temp == d )\n+#define CHECK_CHAR( d )  ( temp = (FT_Char)d, (FT_Int) temp == (FT_Int) d )\n+#define CHECK_BYTE( d )  ( temp = (FT_Byte)d, (FT_UInt)temp == (FT_UInt)d )\n \n       /* horizontal advance in pixels */\n       xadvance = ( slot->advance.x + 32 ) >> 6;"
        },
        {
            "sha": "b4b93934403d5b0f01309462e616d47ada8f399e",
            "filename": "src/raster/ftraster.c",
            "status": "modified",
            "additions": 6,
            "deletions": 6,
            "changes": 12,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/src%2Fraster%2Fftraster.c",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/src%2Fraster%2Fftraster.c",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/src%2Fraster%2Fftraster.c?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -2553,7 +2553,7 @@\n \n         e1 = TRUNC( e1 );\n \n-        if ( e1 >= 0 && e1 < ras.target.rows )\n+        if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n         {\n           PByte  p;\n \n@@ -2647,7 +2647,7 @@\n         /* bounding box instead                                           */\n         if ( pxl < 0 )\n           pxl = e1;\n-        else if ( TRUNC( pxl ) >= ras.target.rows )\n+        else if ( (ULong)( TRUNC( pxl ) ) >= ras.target.rows )\n           pxl = e2;\n \n         /* check that the other pixel isn't set */\n@@ -2662,9 +2662,9 @@\n         if ( ras.target.pitch > 0 )\n           bits += ( ras.target.rows - 1 ) * ras.target.pitch;\n \n-        if ( e1 >= 0              &&\n-             e1 < ras.target.rows &&\n-             *bits & f1           )\n+        if ( e1 >= 0                     &&\n+             (ULong)e1 < ras.target.rows &&\n+             *bits & f1                  )\n           return;\n       }\n       else\n@@ -2676,7 +2676,7 @@\n \n     e1 = TRUNC( pxl );\n \n-    if ( e1 >= 0 && e1 < ras.target.rows )\n+    if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n     {\n       bits -= e1 * ras.target.pitch;\n       if ( ras.target.pitch > 0 )"
        },
        {
            "sha": "cfa64812d31e0cacdf39f5e843bc574a5bc275f6",
            "filename": "src/sfnt/pngshim.c",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https://github.com/freetype/freetype/blob/b3500af717010137046ec4076d1e1c0641e33727/src%2Fsfnt%2Fpngshim.c",
            "raw_url": "https://github.com/freetype/freetype/raw/b3500af717010137046ec4076d1e1c0641e33727/src%2Fsfnt%2Fpngshim.c",
            "contents_url": "https://api.github.com/repos/freetype/freetype/contents/src%2Fsfnt%2Fpngshim.c?ref=b3500af717010137046ec4076d1e1c0641e33727",
            "patch": "@@ -205,11 +205,11 @@\n       goto Exit;\n     }\n \n-    if ( !populate_map_and_metrics                   &&\n-         ( x_offset + metrics->width  > map->width ||\n-           y_offset + metrics->height > map->rows  ||\n-           pix_bits != 32                          ||\n-           map->pixel_mode != FT_PIXEL_MODE_BGRA   ) )\n+    if ( !populate_map_and_metrics                            &&\n+         ( (FT_UInt)x_offset + metrics->width  > map->width ||\n+           (FT_UInt)y_offset + metrics->height > map->rows  ||\n+           pix_bits != 32                                   ||\n+           map->pixel_mode != FT_PIXEL_MODE_BGRA            ) )\n     {\n       error = FT_THROW( Invalid_Argument );\n       goto Exit;"
        }
    ],
    "parent_commit_sha": "df485774fbbc7fd7dc9d3b278846f454654ad5df"
}