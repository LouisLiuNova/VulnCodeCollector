{
    "owner": "ImageMagick",
    "repo": "ImageMagick",
    "commit_sha": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "commit_massage": "",
    "raw_ref": "https://api.github.com/repos/ImageMagick/ImageMagick/commits/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "html_ref": "https://github.com/ImageMagick/ImageMagick/commit/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "author": "cristy",
    "changes_stats": {
        "total": 86,
        "additions": 57,
        "deletions": 29
    },
    "files": [
        {
            "sha": "50755a91a1e3debaa5adb50df94e5220e71844e4",
            "filename": "MagickCore/memory.c",
            "status": "modified",
            "additions": 23,
            "deletions": 8,
            "changes": 31,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fmemory.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fmemory.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickCore%2Fmemory.c?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -606,7 +606,8 @@ MagickExport MemoryInfo *AcquireVirtualMemory(const size_t count,\n       else\n         RelinquishMagickResource(MapResource,length);\n     }\n-  if (memory_info->blob == NULL)\n+  if ((memory_info->blob == NULL) &&\n+      (AcquireMagickResource(DiskResource,length) != MagickFalse))\n     {\n       int\n         file;\n@@ -615,15 +616,26 @@ MagickExport MemoryInfo *AcquireVirtualMemory(const size_t count,\n         Anonymous memory mapping failed, try file-backed memory mapping.\n       */\n       file=AcquireUniqueFileResource(memory_info->filename);\n-      if (file != -1)\n+      if (file == -1)\n+        RelinquishMagickResource(DiskResource,length);\n+      else\n         {\n-          if ((lseek(file,length-1,SEEK_SET) >= 0) && (write(file,\"\",1) == 1))\n+          if ((lseek(file,length-1,SEEK_SET) < 0) || (write(file,\"\",1) != 1))\n+            RelinquishMagickResource(DiskResource,length);\n+          else\n             {\n-              memory_info->blob=MapBlob(file,IOMode,0,length);\n-              if (memory_info->blob != NULL)\n+              if (AcquireMagickResource(MapResource,length) == MagickFalse)\n+                RelinquishMagickResource(DiskResource,length);\n+              else\n                 {\n-                  memory_info->type=MapVirtualMemory;\n-                  (void) AcquireMagickResource(MapResource,length);\n+                  memory_info->blob=MapBlob(file,IOMode,0,length);\n+                  if (memory_info->blob != NULL)\n+                    memory_info->type=MapVirtualMemory;\n+                  else\n+                    {\n+                      RelinquishMagickResource(MapResource,length);\n+                      RelinquishMagickResource(DiskResource,length);\n+                    }\n                 }\n             }\n           (void) close(file);\n@@ -1033,7 +1045,10 @@ MagickExport MemoryInfo *RelinquishVirtualMemory(MemoryInfo *memory_info)\n         memory_info->blob=NULL;\n         RelinquishMagickResource(MapResource,memory_info->length);\n         if (*memory_info->filename != '\\0')\n-          (void) RelinquishUniqueFileResource(memory_info->filename);\n+          {\n+            (void) RelinquishUniqueFileResource(memory_info->filename);\n+            RelinquishMagickResource(DiskResource,memory_info->length);\n+          }\n         break;\n       }\n       case UnalignedVirtualMemory:"
        },
        {
            "sha": "6905a11faa31546b36faefa14abf1908f915efd0",
            "filename": "MagickCore/studio.h",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fstudio.h",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fstudio.h",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickCore%2Fstudio.h?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -46,9 +46,6 @@ extern \"C\" {\n #if defined(_magickcore_inline) && !defined(inline)\n # define inline  _magickcore_inline\n #endif\n-#if defined(_magickcore_restrict) && !defined(restrict)\n-# define restrict  _magickcore_restrict\n-#endif\n # if defined(__cplusplus) || defined(c_plusplus)\n #  undef inline\n # endif\n@@ -75,6 +72,9 @@ extern \"C\" {\n #  include <stdlib.h>\n # endif\n #endif\n+#if defined(_magickcore_restrict) && !defined(restrict)\n+# define restrict  _magickcore_restrict\n+#endif\n #if defined(MAGICKCORE_HAVE_STRING_H)\n # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)\n #  include <memory.h>"
        },
        {
            "sha": "d4407437ab7f46a5ceda7cce603b1221ad6fe1dd",
            "filename": "MagickCore/version.c",
            "status": "modified",
            "additions": 11,
            "deletions": 2,
            "changes": 13,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fversion.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fversion.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickCore%2Fversion.c?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -219,17 +219,26 @@ MagickExport const char *GetMagickDelegates(void)\n MagickExport const char *GetMagickFeatures(void)\n {\n   return \"DPC\"\n-#if defined(MAGICKCORE_BUILD_MODULES) || defined(_DLL)\n-  \" Modules\"\n+#if defined(MAGICKCORE_WINDOWS_SUPPORT) && defined(_DEBUG)\n+  \" Debug\"\n+#endif\n+#if defined(MAGICKCORE_CIPHER_SUPPORT)\n+  \" Cipher\"\n #endif\n #if defined(MAGICKCORE_HDRI_SUPPORT)\n   \" HDRI\"\n #endif\n+#if defined(MAGICKCORE_BUILD_MODULES) || defined(_DLL)\n+  \" Modules\"\n+#endif\n #if defined(MAGICKCORE_OPENCL_SUPPORT)\n   \" OpenCL\"\n #endif\n #if defined(MAGICKCORE_OPENMP_SUPPORT)\n   \" OpenMP\"\n+#endif\n+#if defined(ZERO_CONFIGURATION_SUPPORT)\n+  \" Zero-configuration\"\n #endif\n   ;\n }"
        },
        {
            "sha": "f5221f15c03fcb7ed327b53889f6fe3c1d630385",
            "filename": "MagickCore/version.h",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fversion.h",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickCore%2Fversion.h",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickCore%2Fversion.h?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -27,7 +27,7 @@ extern \"C\" {\n */\n #define MagickPackageName \"ImageMagick\"\n #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"\n-#define MagickSVNRevision  \"18658:18662M\"\n+#define MagickSVNRevision  \"18670M\"\n #define MagickLibVersion  0x700\n #define MagickLibVersionText  \"7.0.0\"\n #define MagickLibVersionNumber  0,0,0\n@@ -48,12 +48,12 @@ extern \"C\" {\n #define MagickppLibAddendum  \"-0\"\n #define MagickppLibInterface  0\n #define MagickppLibMinInterface  0\n-#define MagickReleaseDate  \"2015-05-26\"\n+#define MagickReleaseDate  \"2015-05-29\"\n #define MagickChangeDate   \"20120427\"\n #define MagickAuthoritativeLicense  \\\n   \"http://www.imagemagick.org/script/license.php\"\n #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"\n-#define MagickFeatures \"DPC HDRI OpenMP\"\n+#define MagickFeatures \"DPC HDRI Cipher OpenMP\"\n #define MagickDelegates \"bzlib djvu mpeg fftw fpx fontconfig freetype jbig jng jpeg lcms lzma openexr pango png ps tiff webp x xml zlib\"\n #define MagickHomeURL  \"file:///usr/local/share/doc/ImageMagick-7/index.html\"\n #if (MAGICKCORE_QUANTUM_DEPTH == 8)"
        },
        {
            "sha": "7bf0aa3a1262e43f13c6366008041edc7e624bba",
            "filename": "MagickWand/studio.h",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickWand%2Fstudio.h",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/MagickWand%2Fstudio.h",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/MagickWand%2Fstudio.h?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -46,9 +46,6 @@ extern \"C\" {\n #if defined(_magickcore_inline) && !defined(inline)\n # define inline _magickcore_inline\n #endif\n-#if defined(_magickcore_restrict) && !defined(restrict)\n-# define restrict  _magickcore_restrict\n-#endif\n # if defined(__cplusplus) || defined(c_plusplus)\n #  undef inline\n # endif\n@@ -77,6 +74,9 @@ extern \"C\" {\n #  include <stdlib.h>\n # endif\n #endif\n+#if defined(_magickcore_restrict) && !defined(restrict)\n+# define restrict  _magickcore_restrict\n+#endif\n #if defined(MAGICKCORE_HAVE_STRING_H)\n # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)\n #  include <memory.h>"
        },
        {
            "sha": "222dec25412b10bcfc318512d34731bf82fa946c",
            "filename": "coders/icon.c",
            "status": "modified",
            "additions": 4,
            "deletions": 2,
            "changes": 6,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/coders%2Ficon.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/coders%2Ficon.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/coders%2Ficon.c?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -183,8 +183,8 @@ Image *AutoResizeImage(const Image *image,const char *option,\n       p++;\n \n     size=(size_t)strtol(p,&q,10);\n-    if (p == q || size < 16 || size > 256)\n-        return((Image *) NULL);\n+    if ((p == q) || (size < 16) || (size > 256))\n+      return((Image *) NULL);\n \n     p=q;\n     sizes[i++]=size;\n@@ -354,6 +354,8 @@ static Image *ReadICONImage(const ImageInfo *image_info,\n           Icon image encoded as a compressed PNG image.\n         */\n         length=icon_file.directory[i].size;\n+        if (~length < 16)\n+          ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");\n         png=(unsigned char *) AcquireQuantumMemory(length+16,sizeof(*png));\n         if (png == (unsigned char *) NULL)\n           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
        },
        {
            "sha": "027119d81506fe8e71fa7602e25fa1686e716b56",
            "filename": "coders/pict.c",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/coders%2Fpict.c",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/coders%2Fpict.c",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/coders%2Fpict.c?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -1637,6 +1637,7 @@ static MagickBooleanType WritePICTImage(const ImageInfo *image_info,\n   size_t\n     bytes_per_line,\n     count,\n+    row_bytes,\n     storage_class;\n \n   ssize_t\n@@ -1649,7 +1650,6 @@ static MagickBooleanType WritePICTImage(const ImageInfo *image_info,\n \n   unsigned short\n     base_address,\n-    row_bytes,\n     transfer_mode;\n \n   /*\n@@ -1681,7 +1681,7 @@ static MagickBooleanType WritePICTImage(const ImageInfo *image_info,\n   source_rectangle=size_rectangle;\n   destination_rectangle=size_rectangle;\n   base_address=0xff;\n-  row_bytes=(unsigned short) (image->columns | 0x8000);\n+  row_bytes=image->columns;\n   bounds.top=0;\n   bounds.left=0;\n   bounds.bottom=(short) image->rows;\n@@ -1711,7 +1711,7 @@ static MagickBooleanType WritePICTImage(const ImageInfo *image_info,\n       pixmap.bits_per_pixel=32;\n       pixmap.pack_type=0x04;\n       transfer_mode=0x40;\n-      row_bytes=(unsigned short) ((4*image->columns) | 0x8000);\n+      row_bytes=4*image->columns;\n     }\n   /*\n     Allocate memory."
        },
        {
            "sha": "7633dd204c3e4e85fbf67758e28fe916fd3bb5ed",
            "filename": "configure",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/configure",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/configure",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/configure?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -4341,7 +4341,7 @@ MAGICK_PATCHLEVEL_VERSION=0\n \n MAGICK_VERSION=7.0.0-0\n \n-MAGICK_SVN_REVISION=18658:18662M\n+MAGICK_SVN_REVISION=18670M\n \n \n # Substitute library versioning\n@@ -21655,6 +21655,7 @@ if test \"$enable_cipher\" = 'yes'; then\n \n $as_echo \"#define CIPHER_SUPPORT 1\" >>confdefs.h\n \n+    MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"\n fi\n \n # Build a zero-configuration version of ImageMagick.\n@@ -21670,7 +21671,7 @@ if test \"$enable_zero_configuration\" = 'yes'; then\n \n $as_echo \"#define ZERO_CONFIGURATION_SUPPORT 1\" >>confdefs.h\n \n-    MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"\n+    MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"\n fi\n \n # Build a high dynamic range version of ImageMagick.\n@@ -36535,7 +36536,7 @@ fi\n if test \"$build_modules\" != 'no'; then\n     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n else\n-    MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n+    MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n fi\n \n "
        },
        {
            "sha": "ba0e1118628282b0b04bd5dc09f44ecce3b2f7cd",
            "filename": "configure.ac",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https://github.com/ImageMagick/ImageMagick/blob/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/configure.ac",
            "raw_url": "https://github.com/ImageMagick/ImageMagick/raw/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734/configure.ac",
            "contents_url": "https://api.github.com/repos/ImageMagick/ImageMagick/contents/configure.ac?ref=0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
            "patch": "@@ -642,6 +642,7 @@ AC_ARG_ENABLE([cipher],\n \n if test \"$enable_cipher\" = 'yes'; then\n     AC_DEFINE(CIPHER_SUPPORT,1,[permit enciphering and deciphering image pixels])\n+    MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"\n fi\n \n # Build a zero-configuration version of ImageMagick.\n@@ -653,7 +654,7 @@ AC_ARG_ENABLE([zero-configuration],\n \n if test \"$enable_zero_configuration\" = 'yes'; then\n     AC_DEFINE(ZERO_CONFIGURATION_SUPPORT,1,[Build self-contained, embeddable, zero-configuration ImageMagick])\n-    MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"\n+    MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"\n fi\n \n # Build a high dynamic range version of ImageMagick.\n@@ -3996,7 +3997,7 @@ fi\n if test \"$build_modules\" != 'no'; then\n     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n else\n-    MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n+    MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"\n fi\n AC_SUBST(MAGICK_DEP_LIBS)\n "
        }
    ],
    "parent_commit_sha": "a1f115c91f45051a1f34f219158f72aa29ca4696"
}