{
    "owner": "dbry",
    "repo": "WavPack",
    "commit_sha": "8e3fe45a7bac31d9a3b558ae0079e2d92a04799e",
    "commit_massage": "issue #28, fix buffer overflows and bad allocs on corrupt CAF files",
    "raw_ref": "https://api.github.com/repos/dbry/WavPack/commits/8e3fe45a7bac31d9a3b558ae0079e2d92a04799e",
    "html_ref": "https://github.com/dbry/WavPack/commit/8e3fe45a7bac31d9a3b558ae0079e2d92a04799e",
    "author": "dbry",
    "changes_stats": {
        "total": 30,
        "additions": 23,
        "deletions": 7
    },
    "files": [
        {
            "sha": "6248a71129d427b8022e968a701770fd8a8682d8",
            "filename": "cli/caff.c",
            "status": "modified",
            "additions": 23,
            "deletions": 7,
            "changes": 30,
            "blob_url": "https://github.com/dbry/WavPack/blob/8e3fe45a7bac31d9a3b558ae0079e2d92a04799e/cli%2Fcaff.c",
            "raw_url": "https://github.com/dbry/WavPack/raw/8e3fe45a7bac31d9a3b558ae0079e2d92a04799e/cli%2Fcaff.c",
            "contents_url": "https://api.github.com/repos/dbry/WavPack/contents/cli%2Fcaff.c?ref=8e3fe45a7bac31d9a3b558ae0079e2d92a04799e",
            "patch": "@@ -89,8 +89,8 @@ typedef struct\n \n #define CAFChannelDescriptionFormat \"LLLLL\"\n \n-static const char TMH_full [] = { 1,2,3,13,9,10,5,6,12,14,15,16,17,9,4,18,7,8,19,20,21 };\n-static const char TMH_std [] = { 1,2,3,11,8,9,5,6,10,12,13,14,15,7,4,16 };\n+static const char TMH_full [] = { 1,2,3,13,9,10,5,6,12,14,15,16,17,9,4,18,7,8,19,20,21,0 };\n+static const char TMH_std [] = { 1,2,3,11,8,9,5,6,10,12,13,14,15,7,4,16,0 };\n \n static struct {\n     uint32_t mChannelLayoutTag;     // Core Audio layout, 100 - 146 in high word, num channels in low word\n@@ -274,10 +274,19 @@ int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, Wavpack\n             }\n         }\n         else if (!strncmp (caf_chunk_header.mChunkType, \"chan\", 4)) {\n-            CAFChannelLayout *caf_channel_layout = malloc ((size_t) caf_chunk_header.mChunkSize);\n+            CAFChannelLayout *caf_channel_layout;\n \n-            if (caf_chunk_header.mChunkSize < sizeof (CAFChannelLayout) ||\n-                !DoReadFile (infile, caf_channel_layout, (uint32_t) caf_chunk_header.mChunkSize, &bcount) ||\n+            if (caf_chunk_header.mChunkSize < sizeof (CAFChannelLayout) || caf_chunk_header.mChunkSize > 1024) {\n+                error_line (\"this .CAF file has an invalid 'chan' chunk!\");\n+                return WAVPACK_SOFT_ERROR;\n+            }\n+\n+            if (debug_logging_mode)\n+                error_line (\"'chan' chunk is %d bytes\", (int) caf_chunk_header.mChunkSize);\n+\n+            caf_channel_layout = malloc ((size_t) caf_chunk_header.mChunkSize);\n+\n+            if (!DoReadFile (infile, caf_channel_layout, (uint32_t) caf_chunk_header.mChunkSize, &bcount) ||\n                 bcount != caf_chunk_header.mChunkSize) {\n                     error_line (\"%s is not a valid .CAF file!\", infilename);\n                     free (caf_channel_layout);\n@@ -495,8 +504,15 @@ int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, Wavpack\n         }\n         else {          // just copy unknown chunks to output file\n \n-            int bytes_to_copy = (uint32_t) caf_chunk_header.mChunkSize;\n-            char *buff = malloc (bytes_to_copy);\n+            uint32_t bytes_to_copy = (uint32_t) caf_chunk_header.mChunkSize;\n+            char *buff;\n+\n+            if (caf_chunk_header.mChunkSize < 0 || caf_chunk_header.mChunkSize > 1048576) {\n+                error_line (\"%s is not a valid .CAF file!\", infilename);\n+                return WAVPACK_SOFT_ERROR;\n+            }\n+\n+            buff = malloc (bytes_to_copy);\n \n             if (debug_logging_mode)\n                 error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","
        }
    ],
    "parent_commit_sha": "36a24c7881427d2e1e4dc1cef58f19eee0d13aec"
}